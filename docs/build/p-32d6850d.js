import{O as t,a as n}from"./p-8e815e86.js";const s=new t((t=>t.complete()));function r(n){return n?function(n){return new t((t=>n.schedule((()=>t.complete()))))}(n):s}function e(t,n){return function(s){if("function"!=typeof t)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return s.lift(new i(t,n))}}class i{constructor(t,n){this.project=t,this.thisArg=n}call(t,n){return n.subscribe(new o(t,this.project,this.thisArg))}}class o extends n{constructor(t,n,s){super(t),this.project=n,this.count=0,this.thisArg=s||this}_next(t){let n;try{n=this.project.call(this.thisArg,t,this.count++)}catch(t){return void this.destination.error(t)}this.destination.next(n)}}export{s as E,r as e,e as m}